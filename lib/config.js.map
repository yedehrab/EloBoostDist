{"version":3,"sources":["../../lib/config.js"],"names":["environment","hasPlatform","platform","httpPort","process","env","PORT","baseUrl","stagging","idLength","sessionTimeoutMs","appName","companyName","releaseDate","pruduct","currentEnv","NODE_ENV","toLowerCase","envToExport","templateGlobals"],"mappings":";;;;;AAAA;;;;;AAKA,MAAMA,cAAc,EAApB;;AAEA;;;;AAIA,MAAMC,cAAc,IAApB;;AAEA;;;;;AAKA,MAAMC,WAAWD,cAAc;AAC3BE,cAAUC,QAAQC,GAAR,CAAYC,IADK;AAE3BC,aAAS;AAFkB,CAAd,GAGb,EAHJ;;AAMA;AACAP,YAAYQ,QAAZ,GAAuB;AACnBL,cAAUD,SAASC,QAAT,IAAqB,IADZ;AAEnBM,cAAU,EAFS;AAGnBC,sBAAkB,OAAO,EAAP,GAAY,EAHX;AAInB,uBAAmB;AACfC,iBAAS,SADM;AAEfC,qBAAa,cAFE;AAGfC,qBAAa,MAHE;AAIfN,iBAASL,SAASK,OAAT,IAAoB;AAJd;AAJA,CAAvB;;AAYAP,YAAYc,OAAZ,GAAsB;AAClBX,cAAUD,SAASC,QAAT,IAAqB,IADb;AAElBM,cAAU,EAFQ;AAGlBC,sBAAkB,OAAO,EAAP,GAAY,EAHZ;AAIlB,uBAAmB;AACfC,iBAAS,UADM;AAEfC,qBAAa,cAFE;AAGfC,qBAAa,MAHE;AAIfN,iBAASL,SAASK,OAAT,IAAoB;AAJd;AAJD,CAAtB;;AAYA;;;;AAIA,MAAMQ,aAAa,OAAOX,QAAQC,GAAR,CAAYW,QAAnB,IAA+B,QAA/B,GACfZ,QAAQC,GAAR,CAAYW,QAAZ,CAAqBC,WAArB,EADe,GAEf,EAFJ;;AAIA;;;;AAIA,MAAMC,cAAc,OAAOlB,YAAYe,UAAZ,CAAP,IAAkC,QAAlC,GAChBf,YAAYe,UAAZ,CADgB,GAEhBf,YAAY,UAAZ,CAFJ;;AAIA;MAEIG,Q,GAIAe,W,CAJAf,Q;MACAM,Q,GAGAS,W,CAHAT,Q;MACAC,gB,GAEAQ,W,CAFAR,gB;MACAS,e,GACAD,W,CADAC,e;;AAGJ;;;;;;kBACeD,W","file":"config.js","sourcesContent":["/**\r\n * Ortam değişkenlerini oluşturma.\r\n * * Örnek: *'set NODE_ENV=prodcut node index.js' yazılırsa,\r\n *  5000 portundan çalışır.*\r\n */\r\nconst environment = {};\r\n\r\n/**\r\n * Platform ayarlama\r\n * * Not: *Platform varsa hasPlatform = true yapılmalı ve özellikleri platform objesine yazılmalıdır.*\r\n */\r\nconst hasPlatform = true\r\n\r\n/**\r\n * Platform'a özel ayarları içerir\r\n * * Not: *hasPlatform = true değilse aktif olmaz. Localhost özellikleri çalışır\r\n * * Kendime Not: process.env.PLATFORM ile de yapabilirim\r\n */\r\nconst platform = hasPlatform ? {\r\n    httpPort: process.env.PORT,\r\n    baseUrl: \"https://mytempsite2.platformapp.com/\"\r\n} : {};\r\n\r\n\r\n// Varsayılan ortam değişkeni\r\nenvironment.stagging = {\r\n    httpPort: platform.httpPort || 3000,\r\n    idLength: 25,\r\n    sessionTimeoutMs: 1000 * 60 * 60,\r\n    'templateGlobals': {\r\n        appName: 'Yemreak',\r\n        companyName: 'Yemreak, Inc',\r\n        releaseDate: '2019',\r\n        baseUrl: platform.baseUrl || \"http://localhost:3000/\"\r\n    }\r\n};\r\n\r\nenvironment.pruduct = {\r\n    httpPort: platform.httpPort || 5000,\r\n    idLength: 25,\r\n    sessionTimeoutMs: 1000 * 60 * 60,\r\n    'templateGlobals': {\r\n        appName: 'EloBoost',\r\n        companyName: 'Yemreak, Inc',\r\n        releaseDate: '2019',\r\n        baseUrl: platform.baseUrl || \"http://localhost:5000/\"\r\n    }\r\n};\r\n\r\n/**\r\n * Hangi ortamın, command-line argumanı olacağına karar veriyoruz.\r\n * * Not: *'NODE_ENV' olan bir değişken ismidir, değiştirilemez ! (Türkçeleştirilemez)*\r\n */\r\nconst currentEnv = typeof process.env.NODE_ENV == 'string' ?\r\n    process.env.NODE_ENV.toLowerCase() :\r\n    '';\r\n\r\n/**\r\n * Şu anki ortamı kontrol ediyoruz, eğer yukarıdakilerden biri değile\r\n * varsayılanı tanımlıyoruz.\r\n */\r\nconst envToExport = typeof environment[currentEnv] == 'object' ?\r\n    environment[currentEnv] :\r\n    environment['stagging'];\r\n\r\n// Değişkenlerin aktarılması\r\nexport const {\r\n    httpPort,\r\n    idLength,\r\n    sessionTimeoutMs,\r\n    templateGlobals\r\n} = envToExport;\r\n\r\n// Varsayılan aktarma\r\nexport default envToExport;"]}